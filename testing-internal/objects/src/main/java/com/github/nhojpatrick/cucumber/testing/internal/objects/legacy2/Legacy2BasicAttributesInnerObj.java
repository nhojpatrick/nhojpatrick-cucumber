package com.github.nhojpatrick.cucumber.testing.internal.objects.legacy2;

import com.github.nhojpatrick.cucumber.testing.internal.objects.JsonCustomDefaults;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaBean;
import org.joda.beans.MetaProperty;
import org.joda.beans.gen.BeanDefinition;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import java.util.Map;

@BeanDefinition
@JsonCustomDefaults
@SuppressFBWarnings(value = "CN_IDIOM_NO_SUPER_CALL", justification = "Managed by JodaBeans")
@SuppressWarnings("PMD.UselessParentheses")
public class Legacy2BasicAttributesInnerObj
        implements Bean,
        Cloneable {

    public Legacy2BasicAttributesInnerObj() {

    }

    //------------------------- AUTOGENERATED START -------------------------
    /**
     * The meta-bean for {@code Legacy2BasicAttributesInnerObj}.
     * @return the meta-bean, not null
     */
    public static Legacy2BasicAttributesInnerObj.Meta meta() {
        return Legacy2BasicAttributesInnerObj.Meta.INSTANCE;
    }

    static {
        MetaBean.register(Legacy2BasicAttributesInnerObj.Meta.INSTANCE);
    }

    @Override
    public Legacy2BasicAttributesInnerObj.Meta metaBean() {
        return Legacy2BasicAttributesInnerObj.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    @Override
    public Legacy2BasicAttributesInnerObj clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            return true;
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = getClass().hashCode();
        return hash;
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(32);
        buf.append("Legacy2BasicAttributesInnerObj{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    protected void toString(StringBuilder buf) {
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code Legacy2BasicAttributesInnerObj}.
     */
    public static class Meta extends DirectMetaBean {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, null);

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        public BeanBuilder<? extends Legacy2BasicAttributesInnerObj> builder() {
            return new DirectBeanBuilder<>(new Legacy2BasicAttributesInnerObj());
        }

        @Override
        public Class<? extends Legacy2BasicAttributesInnerObj> beanType() {
            return Legacy2BasicAttributesInnerObj.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
    }

    //-------------------------- AUTOGENERATED END --------------------------

}
